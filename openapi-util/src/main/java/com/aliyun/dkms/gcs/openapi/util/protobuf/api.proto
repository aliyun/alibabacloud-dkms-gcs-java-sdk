syntax = "proto3";

option java_package = "com.aliyun.dkms.gcs.openapi.util.protobuf";
option java_outer_classname = "ApiModels";

message KmsEncryptRequest {
     string KeyId = 1;
     bytes Plaintext = 2;
     bytes Aad = 3;
}

message KmsEncryptResponse {
     string KeyId = 1;
     bytes CiphertextBlob = 2;
     string RequestId = 3;
}

message EncryptRequest {
     string KeyId = 1;
     bytes Plaintext = 2;
     string Algorithm = 3;
     bytes Aad = 4;
     bytes Iv = 5;
     string PaddingMode = 6;
}

message EncryptResponse {
     string KeyId = 1;
     bytes CiphertextBlob = 2;
     bytes Iv = 3;
     string RequestId = 4;
     string Algorithm = 5;
     string PaddingMode = 6;
}

message KmsDecryptRequest {
     bytes CiphertextBlob = 1;
     bytes Aad = 2;
}

message KmsDecryptResponse {
     string KeyId = 1;
     bytes Plaintext = 2;
     string RequestId = 3;
}

message DecryptRequest {
     bytes CiphertextBlob = 1;
     string KeyId = 2;
     string Algorithm = 3;
     bytes Aad = 4;
     bytes Iv = 5;
     string PaddingMode = 6;
}

message DecryptResponse {
     string KeyId = 1;
     bytes Plaintext = 2;
     string RequestId = 3;
     string Algorithm = 4;
     string PaddingMode = 5;
}

message SignRequest {
     string KeyId = 1;
     bytes Digest = 2;
     string Algorithm = 3;
     bytes Message = 4;
     string MessageType = 5;
}

message SignResponse {
     string KeyId = 1;
     bytes Signature = 2;
     string RequestId = 3;
     string Algorithm = 4;
     string MessageType = 5;
}

message VerifyRequest {
     string KeyId = 1;
     bytes Digest = 2;
     bytes Signature = 3;
     string Algorithm = 4;
     bytes Message = 5;
     string MessageType = 6;
}

message VerifyResponse {
     string KeyId = 1;
     bool Value = 2;
     string RequestId = 3;
     string Algorithm = 4;
     string MessageType = 5;
}

message HmacRequest {
     string KeyId = 1;
     bytes Message = 2;
}

message HmacResponse {
     string KeyId = 1;
     bytes Signature = 2;
     string RequestId = 3;
}

message GenerateRandomRequest {
     int32 Length = 1;
}

message GenerateRandomResponse {
     bytes Random = 1;
     string RequestId = 2;
}

message HashRequest {
      bytes Message = 1;
   string Algorithm = 2;
}

message HashResponse {
     bytes  Digest = 1;
     string RequestId = 3;
}

message GenerateDataKeyRequest {
     string KeyId = 1;
     string Algorithm = 2;
     int32 NumberOfBytes = 3;
     bytes Aad = 4;
}

message GenerateDataKeyResponse {
     string KeyId = 1;
     bytes  Iv = 2;
     bytes  Plaintext = 3;
     bytes  CiphertextBlob = 4;
     string RequestId = 5;
     string Algorithm = 6;
}

message GetPublicKeyRequest {
     string KeyId = 1;
}

message GetPublicKeyResponse {
     string KeyId = 1;
     string PublicKey = 2;
     string RequestId = 3;
}


message Error {
     int32 StatusCode = 1;
     string ErrorCode = 2;
     string ErrorMessage = 3;
     string RequestId = 4;
}

// 凭据管家API
message GetSecretValueRequest {
  string SecretName = 1;
  string VersionStage = 2;
  string VersionId = 3;
  bool FetchExtendedConfig = 4;
}

message GetSecretValueResponse {
  string SecretName = 1;
  string SecretType = 2;
  string SecretData = 3;
  string SecretDataType = 4;
  repeated string VersionStages = 5;
  string VersionId = 6;
  string CreateTime = 7;
  string RequestId = 8;
  string LastRotationDate = 9;
  string NextRotationDate = 10;
  string ExtendedConfig = 11;
  string AutomaticRotation = 12;
  string RotationInterval = 13;
}

//高级加解密接口
message AdvanceEncryptRequest {
     string KeyId = 1;
     bytes Plaintext = 2;
     string Algorithm = 3;
     bytes Aad = 4;
     bytes Iv = 5;
     string PaddingMode = 6;
}

message AdvanceEncryptResponse {
     string KeyId = 1;
     bytes CiphertextBlob = 2;
     bytes Iv = 3;
     string RequestId = 4;
     string Algorithm = 5;
     string PaddingMode = 6;
     string KeyVersionId = 7;
}

message AdvanceDecryptRequest {
     bytes CiphertextBlob = 1;
     string KeyId = 2;
     string Algorithm = 3;
     bytes Aad = 4;
     bytes Iv = 5;
     string PaddingMode = 6;
}

message AdvanceDecryptResponse {
     string KeyId = 1;
     bytes Plaintext = 2;
     string RequestId = 3;
     string Algorithm = 4;
     string PaddingMode = 5;
     string KeyVersionId = 6;
}

message AdvanceGenerateDataKeyRequest {
     string KeyId = 1;
     int32 NumberOfBytes = 2;
     bytes Aad = 3;
}

message AdvanceGenerateDataKeyResponse {
     string KeyId = 1;
     bytes  Iv = 2;
     bytes  Plaintext = 3;
     bytes  CiphertextBlob = 4;
     string RequestId = 5;
     string Algorithm = 6;
     string KeyVersionId = 7;
}